	.Z80

FALSE	equ	0
TRUE	equ	NOT FALSE

ESC	equ	1Bh

VT100	equ	TRUE

	public	HOME,CLS,CLREOS,CLREOL,SETCUR,TRMNAM
	public	REVVID,BOLD,NORMAL,GRAPH,ALPHA,SCOLOR

	extrn	PUTCH,TTFLSH

	cseg

; display patch area, defaults to VT100 sequences

	org	10h-3

	if	VT100

vtname:	db	'VT100',0,0,0,0,0,0,0,0,0
vtsize:	db	80,24
vclscr:	db	4,ESC,'[2J',0,0,0
vcleos:	db	3,ESC,'[J',0,0,0,0
vcleol:	db	3,ESC,'[K',0,0,0,0
vgraph:	db	3,ESC,'(0',0,0,0,0
valpha:	db	3,ESC,'(B',0,0,0,0
vhome:	db	3,ESC,'[H',0,0,0,0
vbold:	db	4,ESC,'[1m',0,0,0
vrev:	db	4,ESC,'[7m',0,0,0
vnorm:	db	4,ESC,'[0m',0,0,0
vcurprf:db	2,ESC,'[',0,0,0,0,0
vcursep:db	1,';',0,0,0,0,0,0
vcurpst:db	1,'H',0,0,0,0,0,0
vcurbcd:db	TRUE
vcuryof:db	1
vcurxof:db	1
vxfirst:db	FALSE

	else

vtname:	db	'VT52',0,0,0,0,0,0,0,0,0,0
vtsize:	db	80,24
vclscr:	db	4,ESC,'H',ESC,'J',0,0,0
vcleos:	db	2,ESC,'J',0,0,0,0,0
vcleol:	db	2,ESC,'K',0,0,0,0,0
vgraph:	db	2,ESC,'F',0,0,0,0,0
valpha:	db	2,ESC,'G',0,0,0,0,0
vhome:	db	2,ESC,'H',0,0,0,0,0
vbold:	db	0,0,0,0,0,0,0,0
vrev:	db	0,0,0,0,0,0,0,0
vnorm:	db	0,0,0,0,0,0,0,0
vcurprf:db	2,ESC,'Y',0,0,0,0,0
vcursep:db	0,0,0,0,0,0,0,0
vcurpst:db	0,0,0,0,0,0,0,0
vcurbcd:db	FALSE
vcuryof:db	32
vcurxof:db	32
vxfirst:db	FALSE

	endif

	org	0C0h-3

;-----------------------------------------------------------------------

; screen output routines

CLS:	push	hl
	ld	hl,vclscr
	jp	pseq

CLREOS:	push	hl
	ld	hl,vcleos
	jp	pseq

CLREOL:	push	hl
	ld	hl,vcleol
	jp	pseq

BOLD:	push	hl
	ld	hl,vbold
	jp	pseq

REVVID:	push	hl
	ld	hl,vrev
	jp	pseq

NORMAL:	push	hl
	ld	hl,vnorm
	jp	pseq

GRAPH:	push	hl
	ld	hl,vgraph
	jp	pseq

ALPHA:	push	hl
	ld	hl,valpha
pseq:	call	putseq
	pop	hl
	ret

HOME:	push	hl
	ld	hl,vhome
	ld	a,(hl)
	or	a
	jp	nz,pseq
	ld	hl,0
	call	SETCUR
	pop	hl
	ret

TRMNAM:	ld	hl,vtname
	ret

; H = x coord, L = y coord

SETCUR:	push	hl
	push	de
	push	bc
	ex	de,hl
	ld	hl,(vcuryof)	; H = vcurxof, L = vcuryof
	add	hl,de		; should not generate any CY from L to H
	ex	de,hl
	ld	a,(vxfirst)
	or	a
	jr	z,noswap
	ld	a,e
	ld	e,d
	ld	d,a
noswap:	ld	hl,vcurprf	; prefix
	call	putseq
	ld	c,e		; y coord
	call	pcurnum
	ld	hl,vcursep	; separator
	call	putseq
	ld	c,d		; x coord
	call	pcurnum
	ld	hl,vcurpst	; postfix
	call	putseq
;;	call	TTFLSH
	pop	bc
	pop	de
	pop	hl
	ret

pcurnum:ld	a,(vcurbcd)
	or	a
	jp	z,PUTCH
	ld	a,c
adec:	push	de
	push	bc
	ld	d,0
	ld	b,100
	call	ad1
	ld	b,10
	call	ad1
	add	a,'0'
	ld	c,a
	call	PUTCH
	pop	bc
	pop	de
	ret

ad1:	ld	c,'0'-1
ad2:	inc	c
	sub	b
	jr	nc,ad2
	add	a,b
	push	af
	ld	a,c
	cp	'0'
	jr	nz,ad4
	inc	d
	dec	d
	jr	z,ad5
ad4:	call	PUTCH
	ld	d,1
ad5:	pop	af
	ret

putseq:	ld	a,(hl)
	or	a
	ret	z
	push	bc
	ld	b,a
	inc	hl
pseq1:	ld	c,(hl)
	call	PUTCH
	inc	hl
	djnz	pseq1
	pop	bc
	ret

; H = bg color, L = fg color

SCOLOR:	ld	a,(vnorm)
	or	a
	ret	z		; not supported by terminal
	ld	a,h
	or	a
	jp	p,sc1
	or	l
	ret	m
sc1:	push	hl
	push	de
	push	bc
	ex	de,hl
	ld	hl,vcurprf	; prefix
	call	putseq
	ld	a,e
	or	a
	jp	m,sc2
	add	a,30
	ld	c,a
	call	pcurnum
	ld	a,d
	or	a
	jp	m,sc3
	ld	hl,vcursep
	call	putseq
sc2:	ld	a,d
	or	a
	jp	m,sc3
	add	a,40
	ld	c,a
	call	pcurnum
sc3:	ld	c,'m'
	call	PUTCH
;;	call	TTFLSH
	pop	bc
	pop	de
	pop	hl
	ret

	end
